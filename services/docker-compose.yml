version: "3.9"

services:
  postgres:
    image: postgres:12
    container_name: postgres12
    environment:
      POSTGRES_USER: franz
      POSTGRES_PASSWORD: Franzego@1
      POSTGRES_DB: franz
    ports:
      - "5433:5432"
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka-data:/var/lib/kafka/data
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
      KAFKA_CLUSTERS_0_READONLYMODE: 'false'
  users-service:
    build: ./users-service
    container_name: users-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432   # inside Docker network
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: usersdb
    depends_on:
      - postgres
      - redis
    ports:
      - "8081:8080"
  orders-service:
    build: ./orders-service
    container_name: orders-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: ordersdb
    depends_on:
      - postgres
      - kafka
    ports:
      - "8082:8080"
  notifications-service:
    build: ./notifications-service
    container_name: notifications-service
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - redis
      - kafka
  store-service:
    build: ./store-service
    container_name: store-service
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: pass
      DB_NAME: storedb
    depends_on:
      - postgres
    ports:
      - "8083:8080"





volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data: